<%- include('./includes/header.ejs') %>
<h1 class="code-line" data-line-start=0 data-line-end=1><a id="Unique_Key_Constraint_0"></a>Unique Key Constraint</h1>
<p class="has-line-data" data-line-start="1" data-line-end="3">A unique key constraint requires that every value in a column or set of columns be unique. No rows of a table may have duplicate values in a column (the unique key) or set of columns (the composite unique key) with a unique key constraint.<br>
Kindly explain the below doubts:</p>
<ol>
<li class="has-line-data" data-line-start="4" data-line-end="5">We are able to insert null values into this column then how does every value is unique.Even all the rows of unique constraint column can have null values.</li>
<li class="has-line-data" data-line-start="5" data-line-end="6">What is the usage of unique constraint, why was it created/introduced when we have primary key.</li>
<li class="has-line-data" data-line-start="6" data-line-end="8">When to use unique constraint instead of primary keys.</li>
</ol>
<h1 class="code-line" data-line-start=8 data-line-end=9><a id="Answer_8"></a>Answer:-</h1>
<p class="has-line-data" data-line-start="9" data-line-end="10">Unless a NOT NULL constraint is also defined, a null always satisfies a unique key constraint. Thus, columns with both unique key constraints and NOT NULL constraints are typical. This combination forces the user to enter values in the unique key and eliminates the possibility that new row data conflicts with existing row data.</p>
<h5 class="code-line" data-line-start=10 data-line-end=11><a id="Note_10"></a>Note:</h5>
<p class="has-line-data" data-line-start="11" data-line-end="12">Because of the search mechanism for unique key constraints on multiple columns, you cannot have identical values in the non-null columns of a partially null composite unique key constraint.</p>
<%- include('./includes/footer.ejs') %>